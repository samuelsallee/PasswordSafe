# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/get.ipynb (unless otherwise specified).

__all__ = ['BUCKETNAME', 'TABLENAME', 'SIMPLETABLENAME', 'SimpleTable', 'get']

# Cell
from awsSchema.apigateway import Response, Event

from pynamodb.models import Model
from pynamodb.attributes import UnicodeAttribute, JSONAttribute, NumberAttribute
from copy import deepcopy

# Cell
BUCKETNAME = 'testbucket1-check-master'
TABLENAME = 'testtable1-check-master'
SIMPLETABLENAME = 'testsimpletable1-check-master'

# Cell
class SimpleTable(Model):
  class Meta:
      table_name = SIMPLETABLENAME
      region = 'ap-southeast-1'
  id = UnicodeAttribute(hash_key=True)
  data = JSONAttribute()
  date = NumberAttribute()


  def toDict(self):
    return {
      'id' : self.id,
      'data' : self.data,
      'date' : self.date
    }

  @classmethod
  def fromDict(cls, dict_):
    return cls(
      id = dict_['id'],
      data = dict_['data'],
      date = dict_['date']
    )

  def __repr__(self): return f'{self.id}\n{self.data}\n{self.date}'

# Cell

# input is querying an object id {id: OBJECT_ID}
def get(event, *args):
  id_ = Event.parseQuery(deepcopy(event))['id']
  r  = [item.toDict() for item in SimpleTable.query('testObject')]
  return Response.returnSuccess(body = {'objects': r})